# Basic Settings
set info       size
set scrolloff  10
set wrapscroll on
set dircounts  on
#set hidden     off
set color256   on
set drawbox    on
set icons      on
set ignorecase on
set incsearch  on
set preview    on
set previewer  ~/bin/preview.sh
# set previewer  ~/.config/lf/preview.sh

# make sure trash folder exists
%mkdir -p ~/.local/share/trash
# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.local/share/trash

# Open text files in current terminal
cmd open ${{
    case $(file --mime-type $f -b) in
        text/html) setsid $BROWSER $fx;;
        text/*) $EDITOR $fx;;
        image/*) setsid feh $fx 2>&1 & ;;
        audio/*) setsid mpv $f -quiet >/dev/null 2>&1 & ;;
        video/*) setsid mpv $f -quiet >/dev/null 2>&1 & ;;
        application/pdf) setsid zathura $f >/dev/null 2>&1 & ;;
        *) for f in $fx; do setsid $OPENER $f >/dev/null 2>&1 & done;;
    esac
}}

cmd moveto ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "Move to where?"
    dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/directories | fzf | sed 's|~|$HOME|' )" &&
    for x in $fx; do
      eval mv -iv \"$x\" \"$dest\"
    done &&
    notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "Copy to where?"
    dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/directories | fzf | sed 's|~|$HOME|' )" &&
    for x in $fx; do
      eval cp -ivr \"$x\" \"$dest\"
    done &&
    notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

# Paste using rsync
cmd paste &{{
    load=$(lf -remote 'load')
    mode=$(echo "$load" | sed -n '1p')
    list=$(echo "$load" | sed '1d')
    echo "$list"
    if [ $mode = 'copy' ]; then
        rsync -av --ignore-existing --progress $list . \
        | stdbuf -i0 -o0 -e0 tr '\r' '\n' \
        | while read line; do
            lf -remote "send $id echo $line"
        done
    elif [ $mode = 'move' ]; then
        mv -n $list .
    fi
    lf -remote 'send load'
    lf -remote 'send clear'
}}

cmd mkd $mkdir -p "$@"
cmd mkf ${{
    file=$(basename "$1")
    dir=$(dirname "$1")
    mkdir -p "$dir"
    touch "$@"
}}
cmd dup ${{
    cp -a "$f" "$f.1"
}}

cmd chmod ${{
    for file in "$fx"; do
      chmod "$@" $file
    done
}}


cmd zip %zip -r "$f" "$f"
cmd gzip %gzip "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"

# Set wallpaper
cmd setwallpaper $~/bin/wallpaper.sh $f

# Drag & drop using dragon
cmd dragon %dragon -a -x $fx
cmd cpdragon %dragdrop cp
cmd mvdragon %dragdrop mv

#
# Mappings
#
map <esc> quit
map <c-c> quit
# open inside / outside / open with
map <enter> open
map O $mimeopen --ask $f
map oo &mimeopen $f
map oc $$EDITOR ~/.config/lf/lfrc
# execute
map X $$f
# Copy & move local without using server
# map y %cp -ri $fs .
# map d %mv -i $fs .
# map p $paste $fs
# map ch chmod
map bg setwallpaper

### ARCHIVES
# Create archives
map az $zip
map at $targz
map ag $gzip
# extract here
map ax $extract $f
# extract in subdir
map aX $extract $f

# batch rename using vimv
map br $vimv $fx
# Image preview
map - $~/.config/lf/draw-img.sh $f
# Find file with FZF
map <c-f> $lf -remote "send $id select '$(fzf)'"

# Trash Mappings
map <delete> trash
map D delete
map dd trash
map tc clear_trash
map tr restore_trash

# Dragon Mapping
map dr dragon
map dm mvdragon
map dc cpdragon
map dl dlfile

# Jump to dirs
map gB cd /boot
map gE cd /etc
map gM cd /media
map gU cd /usr
map gb cd ~/bin
map gc cd ~/.config
map gd cd ~/Downloads
map gD cd ~/Documents
map gp cd ~/Pictures
map gs cd ~/Pictures/Snapshots
map gv cd ~/Videos
map gww cd ~/work
map gwp cd ~/work/proj
map gwd cd ~/work/docs
# Jump to network drives
map gnh cd /media/ca-ops-data/mlangloi
map gnp cd /media/ca-ops-data/projets
map gns cd /media/ca-ops-data/shared
